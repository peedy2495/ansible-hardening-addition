- name: installing package dependencies
  ansible.builtin.apt:
    update_cache: yes
    pkg:
      - apt-listchanges
      - binutils
      - clamtk
      - elfutils
      - fail2ban
      - git
      - iucode-tool
      - libopenscap8
      - libpam-pwquality
      - libpam-tmpdir
      - needrestart
      - unzip
      - whois
      - auditd
      - libpam-tmpdir
      - apt-listchanges
      - needrestart
      - fail2ban
      - aide
      - libpam-runtime
    state: present

- name: remove unused packages
  ansible.builtin.apt:
    pkg:
      - apport
      - apport-symptoms
      - at
      - cloud-guest-utils
      - cloud-init
      - cloud-initramfs-copymods
      - cloud-initramfs-dyn-netconf
      - dnsutils
      - eject
      - ftp
      - iputils-tracepath
      - ldap-utils
      - modemmanager
      - netcat-openbsd
      - nis
      - openbsd-inetd
      - popularity-contest
      - rsh-client
      - talk
      - telnet
      - ubuntu-report
      - whoopsie
      - xinetd
    state: absent
    purge: yes
    update_cache: no

- name: grab hardening-check from devscrips
  block:
    - name: create temporary devscripts dir
      ansible.builtin.file:
        path: /tmp/devscripts
        state: directory

    - name: download devscripts
      ansible.builtin.shell: apt download devscripts

    - name: unpack devscripts
      ansible.builtin.shell: dpkg -x devscripts_*_amd64.deb /tmp/devscripts/

    - name: copy hardening-check
      ansible.builtin.copy:
        remote_src: yes
        src: /tmp/devscripts/usr/bin/hardening-check
        dest: /usr/bin/hardening-check
        mode: 755
        owner: root
        group: root

    - name: remove temporary devscripts dir
      ansible.builtin.file:
        path: /tmp/devscripts
        state: absent

- name: run queued handlers
  meta: flush_handlers

- name: installing cpu microcodes
  ansible.builtin.apt:
    update_cache: yes
    pkg:
      - intel-microcode
      - iucode-tool
      - amd64-microcode
    state: "{{ item }}"
    # be shure of pulling those packages in case of using a cached proxy
  with_items: ["absent", "present"]
